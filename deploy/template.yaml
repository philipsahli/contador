apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: gontador-template
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the gontador service
    creationTimestamp: '2018-12-31T06:50:19Z'
    labels:
      app: gontador
    name: gontador
    namespace: gontador
  spec:
    ports:
      - name: gontador
        port: 3000
        protocol: TCP
        targetPort: 3000
    selector:
      app: gontador
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: gontador
    namespace: gontador
  spec:
    lookupPolicy:
      local: false


- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gontador
    name: gontador
    namespace: gontador
  spec:
    replicas: 2
    selector:
      app: gontador
      deploymentconfig: gontador
    template:
      metadata:
        labels:
          app: gontador
          deploymentconfig: gontador
      spec:
        containers:
          - image: >-
              172.30.1.1:5000/gontador/gontador@sha256:9fd64c947842884d6def85ca5ee907efefb2c636960ca5069a06eb89adeda1ec
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/live
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 2
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            name: gontador
            ports:
              - containerPort: 3000
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              httpGet:
                path: /health/ready
                port: 3000
                scheme: HTTP
              initialDelaySeconds: 2
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            env:
              - name: SYSTEM_ENV
                value: dev
              - name: SYSTEM_INSTANCE
                value: demo-stao
              - name: SERVICE_HOST
                valueFrom:
                  fieldRef:
                    # apiVersion: v1
                    fieldPath: spec.nodeName
              - name: SERVICE_PORT
                value: '3000'
              - name: SERVICE_INSTANCE
                valueFrom:
                  fieldRef:
                    # apiVersion: v1
                    fieldPath: metadata.name
              - name: METRIC_HOST
                value: 'graphite.gontador.svc'
              - name: METRIC_PORT
                value: '2003'
              - name: REDIS_URL
                value: 'redis.gontador.svc:6379'
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - gontador
          from:
            kind: ImageStreamTag
            name: 'gontador:latest'
            namespace: gontador
          lastTriggeredImage: >-
            172.30.1.1:5000/gontador/gontador@sha256:9fd64c947842884d6def85ca5ee907efefb2c636960ca5069a06eb89adeda1ec
        type: ImageChange
      - type: ConfigChange
  status: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the redis service
    creationTimestamp: '2018-12-31T06:50:19Z'
    labels:
      app: redis
    name: redis
    namespace: gontador
  spec:
    ports:
      - name: redis
        port: 6379
        protocol: TCP
        targetPort: 6379
    selector:
      app: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: redis
    name: redis
    namespace: gontador
  spec:
    replicas: 1
    selector:
      app: redis
      deploymentconfig: redis
    template:
      metadata:
        labels:
          app: redis
          deploymentconfig: redis
      spec:
        containers:
          - image: redis
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              tcpSocket:
                port: 6379
              initialDelaySeconds: 2
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            name: redis
            ports:
              - containerPort: 6379
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              tcpSocket:
                port: 6379
              initialDelaySeconds: 2
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
  status: {}

- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes a dummy graphite
    creationTimestamp: '2018-12-31T06:50:19Z'
    labels:
      app: graphite
    name: graphite
    namespace: gontador
  spec:
    ports:
      - name: graphite
        port: 2003
        protocol: TCP
        targetPort: 2003
    selector:
      app: graphite
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: graphite
    name: graphite
    namespace: gontador
  spec:
    replicas: 1
    selector:
      app: graphite
      deploymentconfig: graphite
    template:
      metadata:
        labels:
          app: graphite
          deploymentconfig: graphite
      spec:
        containers:
          - image: subfuzion/netcat
            command: ["nc", "-kvl", "2003"]
            imagePullPolicy: Always
            livenessProbe:
              failureThreshold: 3
              tcpSocket:
                port: 2003
              initialDelaySeconds: 2
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            name: graphite
            ports:
              - containerPort: 2003
                protocol: TCP
            readinessProbe:
              failureThreshold: 3
              tcpSocket:
                port: 2003
              initialDelaySeconds: 2
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
  status: {}
